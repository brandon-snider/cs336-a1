{
	"alloc_samples": 31,
	"args": ["cs336_basics/train_bpe.py"],
	"elapsed_time_sec": 3.227893829345703,
	"entrypoint_dir": "/Users/brandon/Documents/College/q6-spring-25/cs-336/assignment1-basics/cs336_basics",
	"filename": "/Users/brandon/Documents/College/q6-spring-25/cs-336/assignment1-basics/cs336_basics",
	"files": {
		"/Users/brandon/Documents/College/q6-spring-25/cs-336/assignment1-basics/cs336_basics/train_bpe.py": {
			"functions": [
				{
					"line": "ReverseLexOrderPair.__init__",
					"lineno": 21,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12292469091697855,
					"n_cpu_percent_c": 0.05499520723835855,
					"n_cpu_percent_python": 0.3124727683997626,
					"n_gpu_avg_memory_mb": 638.2916666666666,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.006203876714047237,
					"n_usage_fraction": 0.0
				},
				{
					"line": "ReverseLexOrderPair.__lt__",
					"lineno": 24,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12126849879122367,
					"n_cpu_percent_c": 0.0486952394245488,
					"n_cpu_percent_python": 0.25688562684400906,
					"n_gpu_avg_memory_mb": 624.621875,
					"n_gpu_peak_memory_mb": 631.234375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.009402898388501894,
					"n_usage_fraction": 0.0
				},
				{
					"line": "ReverseLexOrderPair.__eq__",
					"lineno": 28,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.1227526303605142,
					"n_cpu_percent_c": 0.046618087711065175,
					"n_cpu_percent_python": 0.26002949414917415,
					"n_gpu_avg_memory_mb": 625.59375,
					"n_gpu_peak_memory_mb": 631.609375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.005614140108203466,
					"n_usage_fraction": 0.0
				},
				{
					"line": "pre_tokenize_chunk",
					"lineno": 68,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 446.2617517339835,
					"n_core_utilization": 0.116647313328247,
					"n_cpu_percent_c": 7.149785833738901,
					"n_cpu_percent_python": 62.713084568378015,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 5.002624148025361,
					"n_usage_fraction": 0.0
				},
				{
					"line": "pre_tokenize",
					"lineno": 89,
					"memory_samples": [
						[198017792, 11.903910636901855],
						[233035250, 22.215190887451172],
						[239599042, 32.85403919219971],
						[250106875, 8.284515380859375],
						[242746709, 11.925496101379395],
						[248241917, 11.932439804077148],
						[254538000, 11.926734924316406],
						[281552167, 11.928762435913086],
						[290595542, 11.927888870239258],
						[332843209, 11.87851333618164],
						[333386959, 11.935590744018555],
						[369868000, 11.923530578613281]
					],
					"n_avg_mb": 10.951346397399902,
					"n_copy_mb_s": 167.67619032987344,
					"n_core_utilization": 0.030900745994547403,
					"n_cpu_percent_c": 0.2389271655617274,
					"n_cpu_percent_python": 0.17019003053628431,
					"n_gpu_avg_memory_mb": 285.93990384615387,
					"n_gpu_peak_memory_mb": 657.640625,
					"n_gpu_percent": 0.10519542738239517,
					"n_growth_mb": 11.935590744018555,
					"n_malloc_mb": 128.23299598693848,
					"n_mallocs": 3,
					"n_peak_mb": 11.935590744018555,
					"n_python_fraction": 0.9993492295608303,
					"n_sys_percent": 1.2458476879625648,
					"n_usage_fraction": 0.9276581414067039
				},
				{
					"line": "get_pair_freqs",
					"lineno": 118,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.11620912667632058,
					"n_cpu_percent_c": 0.1527424769044704,
					"n_cpu_percent_python": 0.09846730073779696,
					"n_gpu_avg_memory_mb": 614.890625,
					"n_gpu_peak_memory_mb": 622.109375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.019003269330762757,
					"n_usage_fraction": 0.0
				},
				{
					"line": "build_new_repr",
					"lineno": 136,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12216983956884116,
					"n_cpu_percent_c": 0.09246226190976904,
					"n_cpu_percent_python": 0.25879495608421804,
					"n_gpu_avg_memory_mb": 628.259375,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.008137149750166835,
					"n_usage_fraction": 0.0
				},
				{
					"line": "merge",
					"lineno": 152,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12130738261988243,
					"n_cpu_percent_c": 0.5500142970994076,
					"n_cpu_percent_python": 1.3876271745172855,
					"n_gpu_avg_memory_mb": 641.3761574074074,
					"n_gpu_peak_memory_mb": 672.09375,
					"n_gpu_percent": 0.056286452148342304,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 1,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.05898213628884019,
					"n_usage_fraction": 0.0
				},
				{
					"line": "train_bpe",
					"lineno": 206,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 29.98546987436375,
					"n_core_utilization": 0.12220842233473894,
					"n_cpu_percent_c": 0.18249253157416126,
					"n_cpu_percent_python": 0.5177533735471423,
					"n_gpu_avg_memory_mb": 631.453125,
					"n_gpu_peak_memory_mb": 682.296875,
					"n_gpu_percent": 0.5093740119052529,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.01599554917395801,
					"n_usage_fraction": 0.0
				}
			],
			"imports": [
				"import os",
				"import heapq",
				"from typing import BinaryIO",
				"import regex as re",
				"import time",
				"import pickle",
				"from functools import reduce"
			],
			"leaks": {},
			"lines": [
				{
					"end_outermost_loop": 1,
					"end_region_line": 1,
					"line": "import os\n",
					"lineno": 1,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 1,
					"start_region_line": 1
				},
				{
					"end_outermost_loop": 2,
					"end_region_line": 2,
					"line": "import heapq\n",
					"lineno": 2,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 2,
					"start_region_line": 2
				},
				{
					"end_outermost_loop": 3,
					"end_region_line": 3,
					"line": "from typing import BinaryIO\n",
					"lineno": 3,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 3,
					"start_region_line": 3
				},
				{
					"end_outermost_loop": 4,
					"end_region_line": 4,
					"line": "import regex as re\n",
					"lineno": 4,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 4,
					"start_region_line": 4
				},
				{
					"end_outermost_loop": 5,
					"end_region_line": 5,
					"line": "import collections\n",
					"lineno": 5,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 5,
					"start_region_line": 5
				},
				{
					"end_outermost_loop": 6,
					"end_region_line": 6,
					"line": "import multiprocessing as mp\n",
					"lineno": 6,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 6,
					"start_region_line": 6
				},
				{
					"end_outermost_loop": 7,
					"end_region_line": 7,
					"line": "import time\n",
					"lineno": 7,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 7,
					"start_region_line": 7
				},
				{
					"end_outermost_loop": 8,
					"end_region_line": 8,
					"line": "import pickle\n",
					"lineno": 8,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 8,
					"start_region_line": 8
				},
				{
					"end_outermost_loop": 9,
					"end_region_line": 9,
					"line": "from functools import reduce\n",
					"lineno": 9,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 9,
					"start_region_line": 9
				},
				{
					"end_outermost_loop": 10,
					"end_region_line": 10,
					"line": "\n",
					"lineno": 10,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 10,
					"start_region_line": 10
				},
				{
					"end_outermost_loop": 11,
					"end_region_line": 11,
					"line": "# Regex for coarse tokenization\n",
					"lineno": 11,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 11,
					"start_region_line": 11
				},
				{
					"end_outermost_loop": 12,
					"end_region_line": 12,
					"line": "PAT = re.compile(r\"\"\"'(?:[sdmt]|ll|ve|re)| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+\"\"\")\n",
					"lineno": 12,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 12,
					"start_region_line": 12
				},
				{
					"end_outermost_loop": 13,
					"end_region_line": 13,
					"line": "\n",
					"lineno": 13,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 13,
					"start_region_line": 13
				},
				{
					"end_outermost_loop": 14,
					"end_region_line": 14,
					"line": "\n",
					"lineno": 14,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 14,
					"start_region_line": 14
				},
				{
					"end_outermost_loop": 29,
					"end_region_line": 29,
					"line": "class ReverseLexOrderPair:\n",
					"lineno": 15,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 15,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 16,
					"end_region_line": 29,
					"line": "    \"\"\"\n",
					"lineno": 16,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 16,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 17,
					"end_region_line": 29,
					"line": "    Encapsulates (bytes, bytes) so that in a min-heap, the \"largest in normal lex order\"\n",
					"lineno": 17,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 17,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 18,
					"end_region_line": 29,
					"line": "    is treated as the smallest. Ensures that tie frequencies pop in reverse lex order.\n",
					"lineno": 18,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 18,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 19,
					"end_region_line": 29,
					"line": "    \"\"\"\n",
					"lineno": 19,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 19,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 20,
					"end_region_line": 29,
					"line": "\n",
					"lineno": 20,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 20,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 22,
					"end_region_line": 22,
					"line": "    def __init__(self, pair: tuple[bytes, bytes]):\n",
					"lineno": 21,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12292469091697855,
					"n_cpu_percent_c": 0.05499520723835855,
					"n_cpu_percent_python": 0.3124727683997626,
					"n_gpu_avg_memory_mb": 638.2916666666666,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.006203876714047237,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 21,
					"start_region_line": 21
				},
				{
					"end_outermost_loop": 22,
					"end_region_line": 22,
					"line": "        self.pair = pair\n",
					"lineno": 22,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 22,
					"start_region_line": 21
				},
				{
					"end_outermost_loop": 23,
					"end_region_line": 29,
					"line": "\n",
					"lineno": 23,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 23,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 26,
					"end_region_line": 26,
					"line": "    def __lt__(self, other: \"ReverseLexOrderPair\") -\\u003e bool:\n",
					"lineno": 24,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12126849879122367,
					"n_cpu_percent_c": 0.0486952394245488,
					"n_cpu_percent_python": 0.25688562684400906,
					"n_gpu_avg_memory_mb": 624.621875,
					"n_gpu_peak_memory_mb": 631.234375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.009402898388501894,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 24,
					"start_region_line": 24
				},
				{
					"end_outermost_loop": 26,
					"end_region_line": 26,
					"line": "        # Invert normal order: self \\u003c other if self is \\u003e other (so larger lex sorts first).\n",
					"lineno": 25,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 24,
					"start_region_line": 24
				},
				{
					"end_outermost_loop": 26,
					"end_region_line": 26,
					"line": "        return self.pair \\u003e other.pair\n",
					"lineno": 26,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 26,
					"start_region_line": 24
				},
				{
					"end_outermost_loop": 27,
					"end_region_line": 29,
					"line": "\n",
					"lineno": 27,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 27,
					"start_region_line": 15
				},
				{
					"end_outermost_loop": 29,
					"end_region_line": 29,
					"line": "    def __eq__(self, other: \"ReverseLexOrderPair\") -\\u003e bool:\n",
					"lineno": 28,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.1227526303605142,
					"n_cpu_percent_c": 0.046618087711065175,
					"n_cpu_percent_python": 0.26002949414917415,
					"n_gpu_avg_memory_mb": 625.59375,
					"n_gpu_peak_memory_mb": 631.609375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.005614140108203466,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 28,
					"start_region_line": 28
				},
				{
					"end_outermost_loop": 29,
					"end_region_line": 29,
					"line": "        return self.pair == other.pair\n",
					"lineno": 29,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 29,
					"start_region_line": 28
				},
				{
					"end_outermost_loop": 30,
					"end_region_line": 30,
					"line": "\n",
					"lineno": 30,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 30,
					"start_region_line": 30
				},
				{
					"end_outermost_loop": 31,
					"end_region_line": 31,
					"line": "\n",
					"lineno": 31,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 31,
					"start_region_line": 31
				},
				{
					"end_outermost_loop": 65,
					"end_region_line": 65,
					"line": "def find_chunk_boundaries(file: BinaryIO, desired_num_chunks: int, split_special_token: bytes) -\\u003e list[int]:\n",
					"lineno": 32,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 32,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 33,
					"end_region_line": 65,
					"line": "    \"\"\"\n",
					"lineno": 33,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 33,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 34,
					"end_region_line": 65,
					"line": "    Find chunk boundaries by reading forward from guessed positions\n",
					"lineno": 34,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 34,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 35,
					"end_region_line": 65,
					"line": "    until split_special_token is found (or EOF). Ensures alignment.\n",
					"lineno": 35,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 35,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 36,
					"end_region_line": 65,
					"line": "    \"\"\"\n",
					"lineno": 36,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 36,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 37,
					"end_region_line": 65,
					"line": "    assert isinstance(split_special_token, bytes), \"Must represent special token as a bytestring\"\n",
					"lineno": 37,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 37,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 38,
					"end_region_line": 65,
					"line": "\n",
					"lineno": 38,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 38,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 39,
					"end_region_line": 65,
					"line": "    file.seek(0, os.SEEK_END)\n",
					"lineno": 39,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 39,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 40,
					"end_region_line": 65,
					"line": "    file_size = file.tell()\n",
					"lineno": 40,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 40,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 41,
					"end_region_line": 65,
					"line": "    file.seek(0)\n",
					"lineno": 41,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 41,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 42,
					"end_region_line": 65,
					"line": "    chunk_size = file_size // desired_num_chunks\n",
					"lineno": 42,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 42,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 43,
					"end_region_line": 65,
					"line": "\n",
					"lineno": 43,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 43,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 65,
					"end_region_line": 65,
					"line": "    # Initial boundary guesses (uniformly spaced); force last boundary at EOF\n",
					"lineno": 44,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 32,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 45,
					"end_region_line": 65,
					"line": "    chunk_boundaries = [i * chunk_size for i in range(desired_num_chunks + 1)]\n",
					"lineno": 45,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 45,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 46,
					"end_region_line": 65,
					"line": "    chunk_boundaries[-1] = file_size\n",
					"lineno": 46,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 46,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 47,
					"end_region_line": 65,
					"line": "\n",
					"lineno": 47,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 47,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 48,
					"end_region_line": 65,
					"line": "    mini_chunk_size = 4096\n",
					"lineno": 48,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 48,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "    for bi in range(1, len(chunk_boundaries) - 1):\n",
					"lineno": 49,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 49
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "        pos = chunk_boundaries[bi]\n",
					"lineno": 50,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 49
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "        file.seek(pos)\n",
					"lineno": 51,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 49
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "        while True:\n",
					"lineno": 52,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "            mini_chunk = file.read(mini_chunk_size)\n",
					"lineno": 53,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "            if not mini_chunk:\n",
					"lineno": 54,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                # If EOF is reached before finding split token\n",
					"lineno": 55,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                chunk_boundaries[bi] = file_size\n",
					"lineno": 56,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                break\n",
					"lineno": 57,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "            found_at = mini_chunk.find(split_special_token)\n",
					"lineno": 58,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "            if found_at != -1:\n",
					"lineno": 59,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                # Found the split token; adjust boundary precisely\n",
					"lineno": 60,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                chunk_boundaries[bi] = pos + found_at\n",
					"lineno": 61,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "                break\n",
					"lineno": 62,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 63,
					"end_region_line": 63,
					"line": "            pos += mini_chunk_size\n",
					"lineno": 63,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 49,
					"start_region_line": 52
				},
				{
					"end_outermost_loop": 64,
					"end_region_line": 65,
					"line": "\n",
					"lineno": 64,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 64,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 65,
					"end_region_line": 65,
					"line": "    return sorted(set(chunk_boundaries))\n",
					"lineno": 65,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 65,
					"start_region_line": 32
				},
				{
					"end_outermost_loop": 66,
					"end_region_line": 66,
					"line": "\n",
					"lineno": 66,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 66,
					"start_region_line": 66
				},
				{
					"end_outermost_loop": 67,
					"end_region_line": 67,
					"line": "\n",
					"lineno": 67,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 67,
					"start_region_line": 67
				},
				{
					"end_outermost_loop": 78,
					"end_region_line": 78,
					"line": "def pre_tokenize_chunk(chunk: str, special_pattern: re.Pattern | None) -\\u003e dict[tuple[bytes], int]:\n",
					"lineno": 68,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 68,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 69,
					"end_region_line": 78,
					"line": "    \"\"\"Regex tokenizes the chunk. Splits first on special tokens, then uses PAT.\"\"\"\n",
					"lineno": 69,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 69,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 70,
					"end_region_line": 78,
					"line": "    freqs: dict[tuple[bytes], int] = {}\n",
					"lineno": 70,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 70,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 71,
					"end_region_line": 78,
					"line": "    sub_chunks = special_pattern.split(chunk) if special_pattern else [chunk]\n",
					"lineno": 71,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.07796439582727566,
					"n_cpu_percent_c": 0.6013408795983186,
					"n_cpu_percent_python": 0.19818435514486896,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.48235033528379706,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 71,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 72,
					"end_region_line": 78,
					"line": "\n",
					"lineno": 72,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 72,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 76,
					"end_region_line": 76,
					"line": "    for sub_chunk in sub_chunks:\n",
					"lineno": 73,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 73,
					"start_region_line": 73
				},
				{
					"end_outermost_loop": 76,
					"end_region_line": 76,
					"line": "        for match in PAT.finditer(sub_chunk):\n",
					"lineno": 74,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 167.34814807373905,
					"n_core_utilization": 0.11518806877504595,
					"n_cpu_percent_c": 0.7008076890160713,
					"n_cpu_percent_python": 3.1232681380890956,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.3257418013305016,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 73,
					"start_region_line": 74
				},
				{
					"end_outermost_loop": 76,
					"end_region_line": 76,
					"line": "            match_bytes = tuple(bytes([b]) for b in match.group().encode(\"UTF-8\"))\n",
					"lineno": 75,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 278.9136036602444,
					"n_core_utilization": 0.11730426465023973,
					"n_cpu_percent_c": 5.316388114006778,
					"n_cpu_percent_python": 54.51829040946539,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 3.9254485080111317,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 73,
					"start_region_line": 74
				},
				{
					"end_outermost_loop": 76,
					"end_region_line": 76,
					"line": "            freqs[match_bytes] = freqs.get(match_bytes, 0) + 1\n",
					"lineno": 76,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.11277293642809663,
					"n_cpu_percent_c": 0.24535364172313726,
					"n_cpu_percent_python": 4.873341665678657,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.5549790127945285,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 73,
					"start_region_line": 74
				},
				{
					"end_outermost_loop": 77,
					"end_region_line": 78,
					"line": "\n",
					"lineno": 77,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 77,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 78,
					"end_region_line": 78,
					"line": "    return freqs\n",
					"lineno": 78,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 78,
					"start_region_line": 68
				},
				{
					"end_outermost_loop": 79,
					"end_region_line": 79,
					"line": "\n",
					"lineno": 79,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 79,
					"start_region_line": 79
				},
				{
					"end_outermost_loop": 80,
					"end_region_line": 80,
					"line": "\n",
					"lineno": 80,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 80,
					"start_region_line": 80
				},
				{
					"end_outermost_loop": 86,
					"end_region_line": 86,
					"line": "def merge_freq_dicts(dict1: dict[tuple[bytes], int], dict2: dict[tuple[bytes], int]) -\\u003e dict[tuple[bytes], int]:\n",
					"lineno": 81,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 81,
					"start_region_line": 81
				},
				{
					"end_outermost_loop": 82,
					"end_region_line": 86,
					"line": "    \"\"\"Adds frequencies from dict2 into dict1.\"\"\"\n",
					"lineno": 82,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 82,
					"start_region_line": 81
				},
				{
					"end_outermost_loop": 83,
					"end_region_line": 86,
					"line": "    result = dict1.copy()\n",
					"lineno": 83,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 83,
					"start_region_line": 81
				},
				{
					"end_outermost_loop": 85,
					"end_region_line": 85,
					"line": "    for key, value in dict2.items():\n",
					"lineno": 84,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 84,
					"start_region_line": 84
				},
				{
					"end_outermost_loop": 85,
					"end_region_line": 85,
					"line": "        result[key] = result.get(key, 0) + value\n",
					"lineno": 85,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 84,
					"start_region_line": 84
				},
				{
					"end_outermost_loop": 86,
					"end_region_line": 86,
					"line": "    return result\n",
					"lineno": 86,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 86,
					"start_region_line": 81
				},
				{
					"end_outermost_loop": 87,
					"end_region_line": 87,
					"line": "\n",
					"lineno": 87,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 87,
					"start_region_line": 87
				},
				{
					"end_outermost_loop": 88,
					"end_region_line": 88,
					"line": "\n",
					"lineno": 88,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 88,
					"start_region_line": 88
				},
				{
					"end_outermost_loop": 115,
					"end_region_line": 115,
					"line": "def pre_tokenize(input_path: str, special_tokens: list[str]) -\\u003e dict[tuple[bytes], int]:\n",
					"lineno": 89,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 89,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 90,
					"end_region_line": 115,
					"line": "    \"\"\"\n",
					"lineno": 90,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 90,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 91,
					"end_region_line": 115,
					"line": "    Splits a file into chunks aligned with \\u003c|endoftext|\\u003e, then tokenizes each chunk\n",
					"lineno": 91,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 91,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 92,
					"end_region_line": 115,
					"line": "    in parallel. Returns aggregated frequency dict.\n",
					"lineno": 92,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 92,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 93,
					"end_region_line": 115,
					"line": "    \"\"\"\n",
					"lineno": 93,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 93,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 94,
					"end_region_line": 115,
					"line": "    num_processes = mp.cpu_count()\n",
					"lineno": 94,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 94,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 95,
					"end_region_line": 115,
					"line": "    pool = mp.Pool(processes=num_processes)\n",
					"lineno": 95,
					"memory_samples": [
						[242746709, 11.925496101379395],
						[248241917, 11.932439804077148],
						[254538000, 11.926734924316406],
						[281552167, 11.928762435913086],
						[290595542, 11.927888870239258],
						[332843209, 11.87851333618164],
						[333386959, 11.935590744018555],
						[369868000, 11.923530578613281]
					],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 124.37420834746558,
					"n_core_utilization": 0.016659171953216593,
					"n_cpu_percent_c": 0.00035007160619458246,
					"n_cpu_percent_python": 0.0494052670032677,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 11.935590744018555,
					"n_malloc_mb": 95.37895679473877,
					"n_mallocs": 0,
					"n_peak_mb": 11.935590744018555,
					"n_python_fraction": 0.9994874665026131,
					"n_sys_percent": 0.3235775823573524,
					"n_usage_fraction": 0.6899867316406609,
					"start_outermost_loop": 95,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 96,
					"end_region_line": 115,
					"line": "    chunk_freqs = []\n",
					"lineno": 96,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 96,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 97,
					"end_region_line": 115,
					"line": "    special_pattern = re.compile(\"|\".join(re.escape(tok) for tok in special_tokens)) if special_tokens else None\n",
					"lineno": 97,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 97,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 98,
					"end_region_line": 115,
					"line": "\n",
					"lineno": 98,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 98,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 115,
					"line": "    with open(input_path, \"rb\") as f:\n",
					"lineno": 99,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 99,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 100,
					"end_region_line": 115,
					"line": "        boundaries = find_chunk_boundaries(f, num_processes, b\"\\u003c|endoftext|\\u003e\")\n",
					"lineno": 100,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 100,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 101,
					"end_region_line": 115,
					"line": "\n",
					"lineno": 101,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 101,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 115,
					"line": "        # Read each chunk in bytes, decode, then apply_async for parallel tokenization\n",
					"lineno": 102,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 99,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 107,
					"line": "        for start, end in zip(boundaries[:-1], boundaries[1:]):\n",
					"lineno": 103,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 103,
					"start_region_line": 103
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 107,
					"line": "            f.seek(start)\n",
					"lineno": 104,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 103,
					"start_region_line": 103
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 107,
					"line": "            chunk_bytes = f.read(end - start)\n",
					"lineno": 105,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.10635924519817073,
					"n_cpu_percent_c": 0.7235742295398769,
					"n_cpu_percent_python": 0.045060607900202825,
					"n_gpu_avg_memory_mb": 612.421875,
					"n_gpu_peak_memory_mb": 612.421875,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.13471262897896955,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 103,
					"start_region_line": 103
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 107,
					"line": "            chunk_str = chunk_bytes.decode(\"utf-8\", errors=\"ignore\")\n",
					"lineno": 106,
					"memory_samples": [
						[198017792, 11.903910636901855],
						[233035250, 22.215190887451172],
						[239599042, 32.85403919219971]
					],
					"n_avg_mb": 10.951346397399902,
					"n_copy_mb_s": 15.545707260808369,
					"n_core_utilization": 0.06852990193781387,
					"n_cpu_percent_c": 0.061069417802094704,
					"n_cpu_percent_python": 0.05806733650479669,
					"n_gpu_avg_memory_mb": 613.53125,
					"n_gpu_peak_memory_mb": 614.640625,
					"n_gpu_percent": 1.7020583855019376,
					"n_growth_mb": 11.903910636901855,
					"n_malloc_mb": 32.85403919219971,
					"n_mallocs": 3,
					"n_peak_mb": 11.903910636901855,
					"n_python_fraction": 0.9989479122305436,
					"n_sys_percent": 0.09817122173362543,
					"n_usage_fraction": 0.23767140976604287,
					"start_outermost_loop": 103,
					"start_region_line": 103
				},
				{
					"end_outermost_loop": 107,
					"end_region_line": 107,
					"line": "            chunk_freqs.append(pool.apply_async(pre_tokenize_chunk, (chunk_str, special_pattern)))\n",
					"lineno": 107,
					"memory_samples": [[250106875, 8.284515380859375]],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.040174363640717296,
					"n_cpu_percent_c": 0.0006757115039503764,
					"n_cpu_percent_python": 0.0170204409055515,
					"n_gpu_avg_memory_mb": 612.421875,
					"n_gpu_peak_memory_mb": 612.421875,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.03736431030174369,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 103,
					"start_region_line": 103
				},
				{
					"end_outermost_loop": 108,
					"end_region_line": 115,
					"line": "\n",
					"lineno": 108,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 108,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 109,
					"end_region_line": 115,
					"line": "    pool.close()\n",
					"lineno": 109,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 109,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 110,
					"end_region_line": 115,
					"line": "    pool.join()\n",
					"lineno": 110,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 27.756274721599485,
					"n_core_utilization": 0.0007510407710421812,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0006363782224656063,
					"n_gpu_avg_memory_mb": 632.65625,
					"n_gpu_peak_memory_mb": 657.640625,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.10527967970048452,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 110,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 111,
					"end_region_line": 115,
					"line": "\n",
					"lineno": 111,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 111,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 115,
					"end_region_line": 115,
					"line": "    # Collect and merge partial results\n",
					"lineno": 112,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 89,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 113,
					"end_region_line": 115,
					"line": "    freq_dicts = [res.get() for res in chunk_freqs]\n",
					"lineno": 113,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 113,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 114,
					"end_region_line": 115,
					"line": "    combined_freqs = reduce(merge_freq_dicts, freq_dicts, {})\n",
					"lineno": 114,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 114,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 115,
					"end_region_line": 115,
					"line": "    return combined_freqs\n",
					"lineno": 115,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 115,
					"start_region_line": 89
				},
				{
					"end_outermost_loop": 116,
					"end_region_line": 116,
					"line": "\n",
					"lineno": 116,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 116,
					"start_region_line": 116
				},
				{
					"end_outermost_loop": 117,
					"end_region_line": 117,
					"line": "\n",
					"lineno": 117,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 117,
					"start_region_line": 117
				},
				{
					"end_outermost_loop": 133,
					"end_region_line": 133,
					"line": "def get_pair_freqs(\n",
					"lineno": 118,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 118,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 133,
					"end_region_line": 133,
					"line": "    freqs: dict[tuple[bytes], int],\n",
					"lineno": 119,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 118,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 133,
					"end_region_line": 133,
					"line": ") -\\u003e tuple[dict[tuple[bytes, bytes], int], dict[tuple[bytes, bytes], set[tuple[bytes]]]]:\n",
					"lineno": 120,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 118,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 121,
					"end_region_line": 133,
					"line": "    \"\"\"\n",
					"lineno": 121,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 121,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 122,
					"end_region_line": 133,
					"line": "    Builds a pair-frequency table and reverse mapping (pair -\\u003e set of keys).\n",
					"lineno": 122,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 122,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 123,
					"end_region_line": 133,
					"line": "    \"\"\"\n",
					"lineno": 123,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 123,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 124,
					"end_region_line": 133,
					"line": "    pair_freqs: dict[tuple[bytes, bytes], int] = collections.defaultdict(int)\n",
					"lineno": 124,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 124,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 125,
					"end_region_line": 133,
					"line": "    pairs_to_keys: dict[tuple[bytes, bytes], set[tuple[bytes]]] = collections.defaultdict(set)\n",
					"lineno": 125,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 125,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 126,
					"end_region_line": 133,
					"line": "\n",
					"lineno": 126,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 126,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 131,
					"end_region_line": 131,
					"line": "    for symbols, freq in freqs.items():\n",
					"lineno": 127,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 127,
					"start_region_line": 127
				},
				{
					"end_outermost_loop": 131,
					"end_region_line": 131,
					"line": "        for i in range(len(symbols) - 1):\n",
					"lineno": 128,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 127,
					"start_region_line": 128
				},
				{
					"end_outermost_loop": 131,
					"end_region_line": 131,
					"line": "            pair = (symbols[i], symbols[i + 1])\n",
					"lineno": 129,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 127,
					"start_region_line": 128
				},
				{
					"end_outermost_loop": 131,
					"end_region_line": 131,
					"line": "            pair_freqs[pair] += freq\n",
					"lineno": 130,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 127,
					"start_region_line": 128
				},
				{
					"end_outermost_loop": 131,
					"end_region_line": 131,
					"line": "            pairs_to_keys[pair].add(symbols)\n",
					"lineno": 131,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.11620912667632058,
					"n_cpu_percent_c": 0.1527424769044704,
					"n_cpu_percent_python": 0.09846730073779696,
					"n_gpu_avg_memory_mb": 614.890625,
					"n_gpu_peak_memory_mb": 622.109375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.019003269330762757,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 127,
					"start_region_line": 128
				},
				{
					"end_outermost_loop": 132,
					"end_region_line": 133,
					"line": "\n",
					"lineno": 132,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 132,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 133,
					"end_region_line": 133,
					"line": "    return pair_freqs, pairs_to_keys\n",
					"lineno": 133,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 133,
					"start_region_line": 118
				},
				{
					"end_outermost_loop": 134,
					"end_region_line": 134,
					"line": "\n",
					"lineno": 134,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 134,
					"start_region_line": 134
				},
				{
					"end_outermost_loop": 135,
					"end_region_line": 135,
					"line": "\n",
					"lineno": 135,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 135,
					"start_region_line": 135
				},
				{
					"end_outermost_loop": 149,
					"end_region_line": 149,
					"line": "def build_new_repr(old_repr: tuple[bytes], pair: tuple[bytes, bytes]) -\\u003e tuple[bytes]:\n",
					"lineno": 136,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12275604657355434,
					"n_cpu_percent_c": 0.0036353134963819055,
					"n_cpu_percent_python": 0.05200734615710778,
					"n_gpu_avg_memory_mb": 620.609375,
					"n_gpu_peak_memory_mb": 620.609375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0010171355323925597,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 136,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 137,
					"end_region_line": 149,
					"line": "    \"\"\"\n",
					"lineno": 137,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 137,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 138,
					"end_region_line": 149,
					"line": "    Replaces every occurrence of pair=(x,y) in old_repr with the merged symbol x+y.\n",
					"lineno": 138,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 138,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 139,
					"end_region_line": 149,
					"line": "    \"\"\"\n",
					"lineno": 139,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 139,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 140,
					"end_region_line": 149,
					"line": "    new_symbols = []\n",
					"lineno": 140,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 140,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 141,
					"end_region_line": 149,
					"line": "    i = 0\n",
					"lineno": 141,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 141,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "    while i \\u003c len(old_repr):\n",
					"lineno": 142,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12198747733685195,
					"n_cpu_percent_c": 0.07640110273320348,
					"n_cpu_percent_python": 0.15504519258581492,
					"n_gpu_avg_memory_mb": 633.1197916666666,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.005715645779155462,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "        if i \\u003c len(old_repr) - 1 and old_repr[i] == pair[0] and old_repr[i + 1] == pair[1]:\n",
					"lineno": 143,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "            new_symbols.append(old_repr[i] + old_repr[i + 1])  # merges, e.g. b'A' + b'B' =\\u003e b'AB'\n",
					"lineno": 144,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "            i += 2\n",
					"lineno": 145,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "        else:\n",
					"lineno": 146,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "            new_symbols.append(old_repr[i])\n",
					"lineno": 147,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 148,
					"end_region_line": 148,
					"line": "            i += 1\n",
					"lineno": 148,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 142,
					"start_region_line": 142
				},
				{
					"end_outermost_loop": 149,
					"end_region_line": 149,
					"line": "    return tuple(new_symbols)\n",
					"lineno": 149,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12213071926009558,
					"n_cpu_percent_c": 0.012325043810696002,
					"n_cpu_percent_python": 0.05174241734129538,
					"n_gpu_avg_memory_mb": 621.328125,
					"n_gpu_peak_memory_mb": 621.328125,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.001505170308106474,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 149,
					"start_region_line": 136
				},
				{
					"end_outermost_loop": 150,
					"end_region_line": 150,
					"line": "\n",
					"lineno": 150,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 150,
					"start_region_line": 150
				},
				{
					"end_outermost_loop": 151,
					"end_region_line": 151,
					"line": "\n",
					"lineno": 151,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 151,
					"start_region_line": 151
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "def merge(\n",
					"lineno": 152,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "    freqs: dict[tuple[bytes], int],\n",
					"lineno": 153,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "    pair_freqs: dict[tuple[bytes, bytes], int],\n",
					"lineno": 154,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "    pairs_to_keys: dict[tuple[bytes, bytes], set[tuple[bytes]]],\n",
					"lineno": 155,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "    pair: tuple[bytes, bytes],\n",
					"lineno": 156,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": ") -\\u003e set[tuple[bytes, bytes]]:\n",
					"lineno": 157,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 152,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 158,
					"end_region_line": 189,
					"line": "    \"\"\"\n",
					"lineno": 158,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 158,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 159,
					"end_region_line": 189,
					"line": "    Merges 'pair' into freqs and updates pair_freqs \\u0026 pairs_to_keys for all\n",
					"lineno": 159,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 159,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 160,
					"end_region_line": 189,
					"line": "    affected old/new keys.\n",
					"lineno": 160,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 160,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 161,
					"end_region_line": 189,
					"line": "    \"\"\"\n",
					"lineno": 161,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 161,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 162,
					"end_region_line": 189,
					"line": "    changed_pairs = set()\n",
					"lineno": 162,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 162,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 163,
					"end_region_line": 189,
					"line": "    keys_to_modify = pairs_to_keys[pair].copy()\n",
					"lineno": 163,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 163,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 164,
					"end_region_line": 189,
					"line": "\n",
					"lineno": 164,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 164,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "    for old_key in keys_to_modify:\n",
					"lineno": 165,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        old_freq = freqs.pop(old_key)\n",
					"lineno": 166,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12174522128076237,
					"n_cpu_percent_c": 0.024113227209859197,
					"n_cpu_percent_python": 0.10315819127212486,
					"n_gpu_avg_memory_mb": 623.484375,
					"n_gpu_peak_memory_mb": 626.296875,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.00340251798045567,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        new_key = build_new_repr(old_key, pair)\n",
					"lineno": 167,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "\n",
					"lineno": 168,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        # Decrement frequencies in pair_freqs for old_key's adjacencies\n",
					"lineno": 169,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "        for i in range(len(old_key) - 1):\n",
					"lineno": 170,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "            left, right = old_key[i], old_key[i + 1]\n",
					"lineno": 171,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "            pair_freqs[left, right] -= old_freq\n",
					"lineno": 172,
					"memory_samples": [[2643650250, 10.00003433227539]],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 10.00003433227539,
					"n_malloc_mb": 10.00003433227539,
					"n_mallocs": 0,
					"n_peak_mb": 10.00003433227539,
					"n_python_fraction": 0.999005,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.07234185859329616,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "            changed_pairs.add((left, right))\n",
					"lineno": 173,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12211329288539986,
					"n_cpu_percent_c": 0.15823160274190975,
					"n_cpu_percent_python": 0.4656153096868387,
					"n_gpu_avg_memory_mb": 642.7934027777777,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.17567722128952687,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 1,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.014747479803197676,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "            if pair_freqs[left, right] \\u003c= 0:\n",
					"lineno": 174,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "                del pair_freqs[left, right]\n",
					"lineno": 175,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 176,
					"line": "            pairs_to_keys[left, right].discard(old_key)\n",
					"lineno": 176,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12166015918475638,
					"n_cpu_percent_c": 0.17539587162076012,
					"n_cpu_percent_python": 0.4123444629480957,
					"n_gpu_avg_memory_mb": 652.4453125,
					"n_gpu_peak_memory_mb": 672.09375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.01613477387594901,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 170
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "\n",
					"lineno": 177,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        # Increment frequencies for new_key's adjacencies\n",
					"lineno": 178,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 183,
					"line": "        for i in range(len(new_key) - 1):\n",
					"lineno": 179,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12144689370887314,
					"n_cpu_percent_c": 0.002726993360469481,
					"n_cpu_percent_python": 0.0514527049145255,
					"n_gpu_avg_memory_mb": 620.640625,
					"n_gpu_peak_memory_mb": 620.640625,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0015851062214378797,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 179
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 183,
					"line": "            left, right = new_key[i], new_key[i + 1]\n",
					"lineno": 180,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 179
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 183,
					"line": "            pair_freqs[left, right] += old_freq\n",
					"lineno": 181,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 179
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 183,
					"line": "            changed_pairs.add((left, right))\n",
					"lineno": 182,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12024590853434064,
					"n_cpu_percent_c": 0.11434865651144174,
					"n_cpu_percent_python": 0.2547194522664197,
					"n_gpu_avg_memory_mb": 628.425,
					"n_gpu_peak_memory_mb": 672.0,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.014591627836441402,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 179
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 183,
					"line": "            pairs_to_keys[left, right].add(new_key)\n",
					"lineno": 183,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.1184157711740372,
					"n_cpu_percent_c": 0.07402366116745256,
					"n_cpu_percent_python": 0.10033705342928106,
					"n_gpu_avg_memory_mb": 651.359375,
					"n_gpu_peak_memory_mb": 672.09375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.009694915058873446,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 179
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "\n",
					"lineno": 184,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        # Put new_key back with updated freq\n",
					"lineno": 185,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 186,
					"end_region_line": 186,
					"line": "        freqs[new_key] = freqs.get(new_key, 0) + old_freq\n",
					"lineno": 186,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 165,
					"start_region_line": 165
				},
				{
					"end_outermost_loop": 187,
					"end_region_line": 189,
					"line": "\n",
					"lineno": 187,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 187,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 188,
					"end_region_line": 189,
					"line": "    pairs_to_keys[pair] = set()\n",
					"lineno": 188,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 188,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 189,
					"end_region_line": 189,
					"line": "    return changed_pairs\n",
					"lineno": 189,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 189,
					"start_region_line": 152
				},
				{
					"end_outermost_loop": 190,
					"end_region_line": 190,
					"line": "\n",
					"lineno": 190,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 190,
					"start_region_line": 190
				},
				{
					"end_outermost_loop": 191,
					"end_region_line": 191,
					"line": "\n",
					"lineno": 191,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 191,
					"start_region_line": 191
				},
				{
					"end_outermost_loop": 196,
					"end_region_line": 196,
					"line": "def write_merges(merges, outpath):\n",
					"lineno": 192,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 192,
					"start_region_line": 192
				},
				{
					"end_outermost_loop": 193,
					"end_region_line": 196,
					"line": "    \"\"\"Pickle the merges list to a binary file.\"\"\"\n",
					"lineno": 193,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 193,
					"start_region_line": 192
				},
				{
					"end_outermost_loop": 195,
					"end_region_line": 196,
					"line": "    with open(outpath, \"wb\") as f:\n",
					"lineno": 194,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 194,
					"start_region_line": 192
				},
				{
					"end_outermost_loop": 195,
					"end_region_line": 196,
					"line": "        pickle.dump(merges, f)\n",
					"lineno": 195,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 195,
					"start_region_line": 192
				},
				{
					"end_outermost_loop": 196,
					"end_region_line": 196,
					"line": "    print(f\"Saved {len(merges)} merges to {outpath}\")\n",
					"lineno": 196,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 196,
					"start_region_line": 192
				},
				{
					"end_outermost_loop": 197,
					"end_region_line": 197,
					"line": "\n",
					"lineno": 197,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 197,
					"start_region_line": 197
				},
				{
					"end_outermost_loop": 198,
					"end_region_line": 198,
					"line": "\n",
					"lineno": 198,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 198,
					"start_region_line": 198
				},
				{
					"end_outermost_loop": 203,
					"end_region_line": 203,
					"line": "def write_vocab(vocab, outpath):\n",
					"lineno": 199,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 199,
					"start_region_line": 199
				},
				{
					"end_outermost_loop": 200,
					"end_region_line": 203,
					"line": "    \"\"\"Pickle the vocab dict to a binary file.\"\"\"\n",
					"lineno": 200,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 200,
					"start_region_line": 199
				},
				{
					"end_outermost_loop": 202,
					"end_region_line": 203,
					"line": "    with open(outpath, \"wb\") as f:\n",
					"lineno": 201,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 201,
					"start_region_line": 199
				},
				{
					"end_outermost_loop": 202,
					"end_region_line": 203,
					"line": "        pickle.dump(vocab, f)\n",
					"lineno": 202,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 202,
					"start_region_line": 199
				},
				{
					"end_outermost_loop": 203,
					"end_region_line": 203,
					"line": "    print(f\"Saved vocabulary with {len(vocab)} tokens to {outpath}\")\n",
					"lineno": 203,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 203,
					"start_region_line": 199
				},
				{
					"end_outermost_loop": 204,
					"end_region_line": 204,
					"line": "\n",
					"lineno": 204,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 204,
					"start_region_line": 204
				},
				{
					"end_outermost_loop": 205,
					"end_region_line": 205,
					"line": "\n",
					"lineno": 205,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 205,
					"start_region_line": 205
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "def train_bpe(\n",
					"lineno": 206,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    input_path: str,\n",
					"lineno": 207,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    vocab_size: int,\n",
					"lineno": 208,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    special_tokens: list[str],\n",
					"lineno": 209,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    merges_outpath: str = None,\n",
					"lineno": 210,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    vocab_outpath: str = None,\n",
					"lineno": 211,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": ") -\\u003e tuple[dict[int, bytes], list[tuple[bytes, bytes]]]:\n",
					"lineno": 212,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 213,
					"end_region_line": 294,
					"line": "    \"\"\"\n",
					"lineno": 213,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 213,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 214,
					"end_region_line": 294,
					"line": "    Trains byte-level BPE on a text file, returning:\n",
					"lineno": 214,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 214,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 215,
					"end_region_line": 294,
					"line": "      - vocab: dict[int, bytes]\n",
					"lineno": 215,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 215,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 216,
					"end_region_line": 294,
					"line": "      - merges: list of merged pairs\n",
					"lineno": 216,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 216,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 217,
					"end_region_line": 294,
					"line": "    \"\"\"\n",
					"lineno": 217,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 217,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 218,
					"end_region_line": 294,
					"line": "    train_start_time = time.time()\n",
					"lineno": 218,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 218,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 219,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 219,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 219,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    # Initialize special tokens and single-byte tokens\n",
					"lineno": 220,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 221,
					"end_region_line": 294,
					"line": "    initial_tokens = [tok.encode(\"UTF-8\") for tok in special_tokens] + [bytes([i]) for i in range(256)]\n",
					"lineno": 221,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 221,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 222,
					"end_region_line": 294,
					"line": "    vocab = {i: token for i, token in enumerate(initial_tokens)}\n",
					"lineno": 222,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 222,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 223,
					"end_region_line": 294,
					"line": "    merges = []\n",
					"lineno": 223,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 223,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 224,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 224,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 224,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 225,
					"end_region_line": 294,
					"line": "    print(\"Pre-tokenize: start\")\n",
					"lineno": 225,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 225,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 226,
					"end_region_line": 294,
					"line": "    start_time = time.time()\n",
					"lineno": 226,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 226,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 227,
					"end_region_line": 294,
					"line": "    freqs = pre_tokenize(input_path, special_tokens)\n",
					"lineno": 227,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 227,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 228,
					"end_region_line": 294,
					"line": "    print(f\"Pre-tokenize: finished in {time.time() - start_time:.2f}s\")\n",
					"lineno": 228,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 228,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 229,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 229,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 229,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 230,
					"end_region_line": 294,
					"line": "    print(\"Initial pair frequencies: start\")\n",
					"lineno": 230,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 230,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 231,
					"end_region_line": 294,
					"line": "    start_time = time.time()\n",
					"lineno": 231,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 231,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 232,
					"end_region_line": 294,
					"line": "    pair_freqs, pairs_to_keys = get_pair_freqs(freqs)\n",
					"lineno": 232,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 232,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 233,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 233,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 233,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    # Build a max-heap by pushing negative frequencies\n",
					"lineno": 234,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 235,
					"end_region_line": 294,
					"line": "    pair_heap = []\n",
					"lineno": 235,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 235,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 238,
					"end_region_line": 238,
					"line": "    for p, f in pair_freqs.items():\n",
					"lineno": 236,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 236,
					"start_region_line": 236
				},
				{
					"end_outermost_loop": 238,
					"end_region_line": 238,
					"line": "        if f \\u003e 0:\n",
					"lineno": 237,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 236,
					"start_region_line": 236
				},
				{
					"end_outermost_loop": 238,
					"end_region_line": 238,
					"line": "            heapq.heappush(pair_heap, (-f, ReverseLexOrderPair(p), p))\n",
					"lineno": 238,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 236,
					"start_region_line": 236
				},
				{
					"end_outermost_loop": 239,
					"end_region_line": 294,
					"line": "    print(f\"Initial pair frequencies: finished in {time.time() - start_time:.2f}s\")\n",
					"lineno": 239,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 239,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 240,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 240,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 240,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 241,
					"end_region_line": 294,
					"line": "    n_initial_tokens = len(initial_tokens)\n",
					"lineno": 241,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 241,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 242,
					"end_region_line": 294,
					"line": "    n_merges = vocab_size - n_initial_tokens\n",
					"lineno": 242,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 242,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 243,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 243,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 243,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 244,
					"end_region_line": 294,
					"line": "    print(\"Merge: start\")\n",
					"lineno": 244,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 244,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 245,
					"end_region_line": 294,
					"line": "    start_time = time.time()\n",
					"lineno": 245,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 245,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 246,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 246,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 246,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "    for i in range(n_initial_tokens, n_initial_tokens + n_merges):\n",
					"lineno": 247,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        if not pair_heap:\n",
					"lineno": 248,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "            break\n",
					"lineno": 249,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "\n",
					"lineno": 250,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        # Pop until we find the top pair that still matches pair_freqs\n",
					"lineno": 251,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "        while pair_heap:\n",
					"lineno": 252,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            neg_freq, _, top_pair = heapq.heappop(pair_heap)\n",
					"lineno": 253,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 29.98546987436375,
					"n_core_utilization": 0.12201239952385563,
					"n_cpu_percent_c": 0.037967986638592,
					"n_cpu_percent_python": 0.25846144750573646,
					"n_gpu_avg_memory_mb": 638.084375,
					"n_gpu_peak_memory_mb": 682.296875,
					"n_gpu_percent": 1.1973734979348338,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.007258382935249526,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            freq = -neg_freq\n",
					"lineno": 254,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            if pair_freqs.get(top_pair, 0) == freq:\n",
					"lineno": 255,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.1209917310354827,
					"n_cpu_percent_c": 0.004946577336325725,
					"n_cpu_percent_python": 0.05125986877020876,
					"n_gpu_avg_memory_mb": 626.359375,
					"n_gpu_peak_memory_mb": 626.359375,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0018620326497235265,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "                pair = top_pair\n",
					"lineno": 256,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "                break\n",
					"lineno": 257,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            if top_pair in pair_freqs and pair_freqs[top_pair] \\u003e 0:\n",
					"lineno": 258,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "                heapq.heappush(pair_heap, (-pair_freqs[top_pair], ReverseLexOrderPair(top_pair), top_pair))\n",
					"lineno": 259,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12281456861245718,
					"n_cpu_percent_c": 0.010260737978766884,
					"n_cpu_percent_python": 0.05203213985175659,
					"n_gpu_avg_memory_mb": 630.125,
					"n_gpu_peak_memory_mb": 630.125,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0011084744421549656,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "        else:\n",
					"lineno": 260,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            # If pair_heap is empty after the loop, we are done\n",
					"lineno": 261,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 262,
					"line": "            break\n",
					"lineno": 262,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 252
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "\n",
					"lineno": 263,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        if pair_freqs.get(pair, 0) \\u003c= 0:\n",
					"lineno": 264,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "            break\n",
					"lineno": 265,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "\n",
					"lineno": 266,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        # Add this new merge token to vocab and record the merge\n",
					"lineno": 267,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        vocab[i] = pair[0] + pair[1]\n",
					"lineno": 268,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        merges.append(pair)\n",
					"lineno": 269,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "\n",
					"lineno": 270,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        # Merge in freqs, then update the heap for pairs changed by this merge\n",
					"lineno": 271,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        changed_pairs = merge(freqs, pair_freqs, pairs_to_keys, pair)\n",
					"lineno": 272,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 275,
					"line": "        for cp in changed_pairs:\n",
					"lineno": 273,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 273
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 275,
					"line": "            if cp in pair_freqs and pair_freqs[cp] \\u003e 0:\n",
					"lineno": 274,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 273
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 275,
					"line": "                heapq.heappush(pair_heap, (-pair_freqs[cp], ReverseLexOrderPair(cp), cp))\n",
					"lineno": 275,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.12273864202672383,
					"n_cpu_percent_c": 0.1298179312792108,
					"n_cpu_percent_python": 0.15599991741944066,
					"n_gpu_avg_memory_mb": 622.5416666666666,
					"n_gpu_peak_memory_mb": 626.296875,
					"n_gpu_percent": 0.0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.005265957488095819,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 273
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "\n",
					"lineno": 276,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        # Print progress every 100 merges or at the last iteration\n",
					"lineno": 277,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        if ((i \\u003e n_initial_tokens) and ((i - n_initial_tokens + 1) % 100 == 0)) or (\n",
					"lineno": 278,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "            i == n_initial_tokens + n_merges - 1\n",
					"lineno": 279,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "        ):\n",
					"lineno": 280,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "            print(\n",
					"lineno": 281,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "                f\"{i - n_initial_tokens + 1}/{n_merges} merges completed (merge runtime: {time.time() - start_time:.2f}s)\"\n",
					"lineno": 282,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 283,
					"end_region_line": 283,
					"line": "            )\n",
					"lineno": 283,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 247,
					"start_region_line": 247
				},
				{
					"end_outermost_loop": 284,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 284,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 284,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 285,
					"end_region_line": 294,
					"line": "    print(f\"Merges completed in {time.time() - start_time:.2f}s\")\n",
					"lineno": 285,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 285,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 286,
					"end_region_line": 294,
					"line": "    print(f\"Training completed in {time.time() - train_start_time:.2f}s\")\n",
					"lineno": 286,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 286,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 287,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 287,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 287,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    # Optionally save merges and vocab\n",
					"lineno": 288,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 206,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 290,
					"end_region_line": 294,
					"line": "    if merges_outpath:\n",
					"lineno": 289,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 289,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 290,
					"end_region_line": 294,
					"line": "        write_merges(merges, merges_outpath)\n",
					"lineno": 290,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 290,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 292,
					"end_region_line": 294,
					"line": "    if vocab_outpath:\n",
					"lineno": 291,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 291,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 292,
					"end_region_line": 294,
					"line": "        write_vocab(vocab, vocab_outpath)\n",
					"lineno": 292,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 292,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 293,
					"end_region_line": 294,
					"line": "\n",
					"lineno": 293,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 293,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 294,
					"end_region_line": 294,
					"line": "    return vocab, merges\n",
					"lineno": 294,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 294,
					"start_region_line": 206
				},
				{
					"end_outermost_loop": 295,
					"end_region_line": 295,
					"line": "\n",
					"lineno": 295,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 295,
					"start_region_line": 295
				},
				{
					"end_outermost_loop": 296,
					"end_region_line": 296,
					"line": "\n",
					"lineno": 296,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 296,
					"start_region_line": 296
				},
				{
					"end_outermost_loop": 304,
					"end_region_line": 297,
					"line": "if __name__ == \"__main__\":\n",
					"lineno": 297,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 297,
					"start_region_line": 297
				},
				{
					"end_outermost_loop": 298,
					"end_region_line": 298,
					"line": "    (vocab, merges) = train_bpe(\n",
					"lineno": 298,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 298,
					"start_region_line": 298
				},
				{
					"end_outermost_loop": 299,
					"end_region_line": 299,
					"line": "        input_path=\"./data/TinyStoriesV2-GPT4-valid.txt\",\n",
					"lineno": 299,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 299,
					"start_region_line": 299
				},
				{
					"end_outermost_loop": 300,
					"end_region_line": 300,
					"line": "        vocab_size=10000,\n",
					"lineno": 300,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 300,
					"start_region_line": 300
				},
				{
					"end_outermost_loop": 301,
					"end_region_line": 301,
					"line": "        special_tokens=[\"\\u003c|endoftext|\\u003e\"],\n",
					"lineno": 301,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 301,
					"start_region_line": 301
				},
				{
					"end_outermost_loop": 302,
					"end_region_line": 302,
					"line": "        merges_outpath=\"./out/ts-valid-merges-2.txt\",\n",
					"lineno": 302,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 302,
					"start_region_line": 302
				},
				{
					"end_outermost_loop": 303,
					"end_region_line": 303,
					"line": "        vocab_outpath=\"./out/ts-valid-vocab-2.txt\",\n",
					"lineno": 303,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 303,
					"start_region_line": 303
				},
				{
					"end_outermost_loop": 304,
					"end_region_line": 304,
					"line": "    )\n",
					"lineno": 304,
					"memory_samples": [],
					"n_avg_mb": 0.0,
					"n_copy_mb_s": 0.0,
					"n_core_utilization": 0.0,
					"n_cpu_percent_c": 0.0,
					"n_cpu_percent_python": 0.0,
					"n_gpu_avg_memory_mb": 0.0,
					"n_gpu_peak_memory_mb": 0.0,
					"n_gpu_percent": 0,
					"n_growth_mb": 0.0,
					"n_malloc_mb": 0.0,
					"n_mallocs": 0,
					"n_peak_mb": 0.0,
					"n_python_fraction": 0,
					"n_sys_percent": 0.0,
					"n_usage_fraction": 0.0,
					"start_outermost_loop": 304,
					"start_region_line": 304
				}
			],
			"percent_cpu_time": 80.86384925009848
		}
	},
	"gpu": true,
	"gpu_device": "GPU",
	"growth_rate": 0.0,
	"max_footprint_fname": "/Users/brandon/Documents/College/q6-spring-25/cs-336/assignment1-basics/cs336_basics/train_bpe.py",
	"max_footprint_lineno": 106,
	"max_footprint_mb": 32.85403919219971,
	"max_footprint_python_fraction": 0.999989,
	"memory": true,
	"program": "/Users/brandon/Documents/College/q6-spring-25/cs-336/assignment1-basics/cs336_basics/train_bpe.py",
	"samples": [
		[197997459, 11.903910636901855],
		[233020459, 22.215190887451172],
		[239592709, 32.85403919219971],
		[242727750, 11.925496101379395],
		[248223709, 11.932439804077148],
		[249327375, 22.12241554260254],
		[250090042, 8.284515380859375],
		[254521417, 11.926734924316406],
		[281485792, 11.928762435913086],
		[290556084, 11.927888870239258],
		[294672334, 0],
		[294674917, 0],
		[332804500, 11.87851333618164],
		[333350125, 11.935590744018555],
		[358761292, 0],
		[369832167, 11.923530578613281],
		[2643643792, 10.00003433227539],
		[2684798084, 0]
	],
	"stacks": []
}
